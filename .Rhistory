library('Metrics')
library('randomForest')
library('ggplot2')
library('ggthemes')
library('dplyr')
library('caret')
library('psych')
library(rpart.plot)
library(rpart)
library(corrplot)
corrplot(wine_data)
corrplot(cor(wine_data)
corrplot(cor(wine_data))
corrplot(cor(wine_data), method="number")
corrplot(cor(wine_data), method="number", type="upper")
corrplot(cor(wine_data), method="color", type="upper")
corrplot(cor(wine_data, method="pearson"), method="color", type="upper")
corrplot(cor(wine_data, method="pearson"), method="color", type="upper", order="hclust")
corrplot(cor(wine_data, method="pearson"), method="color", type="upper")
corrplot(cor(wine_data, method="pearson"), method="color", type="upper", p.mat = p.mat, sig.level = 0.01)
cor.mtest <- function(mat, ...) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat<- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], ...)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
p.mat <- cor.mtest(wine_data)
corrplot(cor(wine_data, method="pearson"), method="color", type="upper", p.mat = p.mat, sig.level = 0.01)
cor.mtest <- function(mat, ...) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat<- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], ...)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
p.mat <- cor.mtest(wine_data)
corrplot(cor(wine_data, method="pearson"), method="color", type="upper", p.mat = p.mat, sig.level = 0.05)
corrplot(cor(wine_data, method="pearson"), method="color")
corrplot(cor(wine_data, method="pearson"))
cor.mtest <- function(mat, ...) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat<- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], ...)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
p.mat <- cor.mtest(wine_data)
corrplot(cor(wine_data, method="pearson"), method="color", type="upper", p.mat = p.mat, sig.level = 0.05)
cor.mtest <- function(mat, ...) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat<- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], ...)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
p.mat <- cor.mtest(wine_data)
corrplot(cor(wine_data, method="pearson"), method="color", type="upper", p.mat = p.mat, sig.level = 0.01)
ggplot(aes(x=alcohol, y=sulphates), data=wine_data) +
geom_point(alpha=1/10) +
facet_grid(~ quality)
ggplot(aes(x=alcohol, y=sulphates), data=wine_data) +
geom_point(alpha=1/10) +
geom_smooth()
facet_grid(~ quality)
ggplot(aes(x=alcohol, y=sulphates), data=wine_data) +
geom_point(alpha=1/10) +
geom_smooth() +
facet_grid(~ quality)
ggplot(aes(x=alcohol, y=sulphates), data=wine_data) +
geom_point(alpha=1/10) +
geom_smooth()
ggplot(aes(x=alcohol, y=sulphates), data=wine_data) +
geom_point(alpha=1/10, aes(color=quality)) +
geom_smooth()
ggplot(aes(x=alcohol, y=sulphates), data=wine_data) +
geom_point(alpha=1/10) +
geom_smooth() +
facet_grid(~ quality)
ggplot(aes(x=alcohol, y=sulphates), data=wine_data) +
geom_boxplot(alpha=1/10) +
geom_smooth() +
facet_grid(~ quality)
ggplot(aes(x=alcohol, y=sulphates), data=wine_data) +
geom_boxplot(alpha=1/10) +
facet_grid(~ quality)
ggplot(aes(x=alcohol, y=sulphates), data=wine_data) +
geom_boxplot(alpha=1/5) +
facet_grid(~ quality)
ggplot(aes(x=alcohol, y=sulphates), data=wine_data) +
geom_boxplot(alpha=1/5, aes(jitter)) +
facet_grid(~ quality)
ggplot(aes(x=alcohol, y=sulphates), data=wine_data) +
geom_boxplot(alpha=1/5) +
facet_grid(~ quality)
ggplot(aes(x=alcohol, y=sulphates), data=wine_data) +
geom_boxplot(alpha=1/5, aes(group=quality)) +
facet_grid(~ quality)
ggplot(aes(x=alcohol, y=sulphates), data=wine_data) +
geom_boxplot(alpha=1/5, aes(group=quality))
ggplot(aes(x=alcohol, y=sulphates), data=wine_data) +
geom_boxplot(alpha=1/5, aes(group=quality)) +
facet_grid(~ quality)
ggplot(aes(x=alcohol, y=sulphates), data=wine_data) +
geom_point(alpha=1/10) +
geom_smooth() +
facet_grid(~ quality)
ggplot(aes(x=alcohol, y=sulphates), data=wine_data) +
geom_point(alpha=1/10) +
geom_smooth(method="lm") +
facet_grid(~ quality)
ggplot(aes(x=alcohol, y=sulphates), data=wine_data) +
geom_point(alpha=1/10) +
facet_grid(~ quality)
ggplot(aes(x=alcohol, y=sulphates), data=wine_data) +
geom_point(alpha=1/5) +
facet_grid(~ quality)
ggplot(aes(x=alcohol, y=sulphates), data=wine_data) +
geom_jitter(alpha=1/5) +
facet_grid(~ quality)
ggplot(aes(x=alcohol, y=sulphates), data=wine_data) +
geom_jitter(alpha=1/5, aes(color=citric.acid)) +
facet_grid(~ quality)
ggplot(aes(x=alcohol, y=sulphates), data=wine_data) +
geom_jitter(aes(color=citric.acid)) +
facet_grid(~ quality)
ggplot(aes(x=alcohol, y=sulphates), data=wine_data) +
geom_jitter(aes(color=citric.acid)) +
facet_grid(~ quality) +
labs(color = "Citric Acid (g / dm^3)")
ggplot(aes(x=alcohol, y=sulphates), data=wine_data) +
geom_jitter(aes(color=citric.acid)) +
facet_grid(~ quality) +
labs(color = "Citric Acid (g / dm^3)")
ggplot(aes(x=alcohol, y=sulphates), data=wine_data) +
geom_jitter(aes(color=citric.acid)) +
facet_grid(~ quality) +
labs(y = "Potassium Sulphate",color = "Citric Acid (g / dm^3)")
ggplot(aes(x=alcohol, y=sulphates), data=wine_data) +
geom_jitter(aes(color=citric.acid)) +
facet_grid(~ quality) +
labs(y = "Potassium Sulphate (g / dm^3)",color = "Citric Acid (g / dm^3)")
ggplot(aes(x=alcohol, y=sulphates), data=wine_data) +
geom_jitter(aes(color=citric.acid)) +
facet_grid(~ quality) +
labs(x= "Alcohol (% by volume)", y = "Potassium Sulphate (g / dm^3)",color = "Citric Acid (g / dm^3)")
ggplot(aes(x=alcohol, y=sulphates), data=wine_data) +
geom_jitter(aes(color=citric.acid)) +
facet_grid(~ quality) +
labs(
title = "Alcohol Content + Sulphates + Citric Acid by Quality",
x = "Alcohol (% by volume)",
y = "Potassium Sulphate (g / dm^3)",
color = "Citric Acid (g / dm^3)"
)
ggplot(aes(x=alcohol, y=sulphates), data=wine_data) +
geom_jitter(aes(color=citric.acid)) +
facet_grid(~ quality) +
labs(
title = "Alcohol Content + Sulphates + Citric Acid by Quality",
x = "Alcohol (% by volume)",
y = expression(paste("Potassium Sulphate (g / dm"^"3")),
color = "Citric Acid (g / dm^3)"
)
ggplot(aes(x=alcohol, y=sulphates), data=wine_data) +
geom_jitter(aes(color=citric.acid)) +
facet_grid(~ quality) +
labs(
title = "Alcohol Content + Sulphates + Citric Acid by Quality",
x = "Alcohol (% by volume)",
y = expression(paste("Potassium Sulphate (g / dm"^"3"),")"),
color = expression(paste("Citric Acid (g / dm"^"3"),")")
)
ggplot(aes(x=alcohol, y=sulphates), data=wine_data) +
geom_jitter(aes(color=citric.acid)) +
facet_grid(~ quality) +
labs(
title = "Alcohol Content + Sulphates + Citric Acid by Quality",
x = "Alcohol (% by volume)",
y = expression(
paste("Potassium Sulphate (g / dm"^"3", ")")),
color = expression(paste("Citric Acid (g / dm"^"3"),")")
)
ggplot(aes(x=alcohol, y=sulphates), data=wine_data) +
geom_jitter(aes(color=citric.acid)) +
facet_grid(~ quality) +
labs(
title = "Alcohol Content + Sulphates + Citric Acid by Quality",
x = "Alcohol (% by volume)",
y = expression(
paste("Potassium Sulphate (g / dm"^"3", ")")),
color = expression(paste("Citric Acid (g / dm"^"3", ")"))
)
cor.mtest <- function(mat, ...) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat<- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], ...)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
p.mat <- cor.mtest(wine_data)
corrplot(
cor(wine_data, method="pearson"),
method="color",
type="upper",
p.mat = p.mat,
sig.level = 0.01,
addCoef.col = "black"
)
cor.mtest <- function(mat, ...) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat<- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], ...)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
p.mat <- cor.mtest(wine_data)
corrplot(
cor(wine_data, method="pearson"),
method="color",
type="upper",
p.mat = p.mat,
sig.level = 0.01
)
cor.mtest <- function(mat, ...) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat<- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], ...)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
p.mat <- cor.mtest(wine_data)
corrplot(
cor(wine_data, method="pearson"),
method="color",
type="upper",
p.mat = p.mat,
sig.level = 0.01,
, tl.srt=45
)
cor.mtest <- function(mat, ...) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat<- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], ...)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
p.mat <- cor.mtest(wine_data)
corrplot(
cor(wine_data, method="pearson"),
method="color",
type="upper",
p.mat = p.mat,
sig.level = 0.01,
tl.srt=45
)
cor.mtest <- function(mat, ...) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat<- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], ...)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
p.mat <- cor.mtest(wine_data)
corrplot(
cor(wine_data, method="pearson"),
method="color",
type="upper",
p.mat = p.mat,
sig.level = 0.01,
tl.srt=45,
tl.col="black"
)
cor.mtest <- function(mat, ...) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat<- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], ...)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
p.mat <- cor.mtest(wine_data)
corrplot(
cor(wine_data, method="pearson"),
method="color",
type="upper",
p.mat = p.mat,
sig.level = 0.01,
tl.srt=45,
tl.col="black",
order="hclust",
)
cor.mtest <- function(mat, ...) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat<- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], ...)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
p.mat <- cor.mtest(wine_data)
corrplot(
cor(wine_data, method="pearson"),
method="color",
type="upper",
p.mat = p.mat,
sig.level = 0.01,
tl.srt=45,
tl.col="black",
order="hclust"
)
cor.mtest <- function(mat, ...) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat<- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], ...)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
p.mat <- cor.mtest(wine_data)
corrplot(
cor(wine_data, method="pearson"),
method="color",
type="upper",
p.mat = p.mat,
sig.level = 0.01,
tl.srt=45,
tl.col="black",
order="hclust"
) +
labs(title="Correlation Matrix")
cor.mtest <- function(mat, ...) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat<- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], ...)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
p.mat <- cor.mtest(wine_data)
corrplot(
cor(wine_data, method="pearson"),
method="color",
type="upper",
p.mat = p.mat,
sig.level = 0.01,
tl.srt=45,
tl.col="black",
order="hclust",
diag=FALSE
)
cor.mtest <- function(mat, ...) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat<- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], ...)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
p.mat <- cor.mtest(wine_data)
corrplot(
cor(wine_data, method="pearson"),
method="color",
type="upper",
p.mat = p.mat,
sig.level = 0.01,
tl.srt=45,
tl.col="black",
order="hclust",
diag=FALSE
)
ggplot(aes(x=volatile.acidity, y=total.sulfur.dioxide), data=wine_data) +
geom_jitter(aes(color=density)) +
facet_grid(~ quality) +
labs(
title = "Alcohol Content + Sulphates + Citric Acid by Quality",
x = "Alcohol (% by volume)",
y = expression(paste("Potassium Sulphate (g / dm"^"3", ")")),
color = expression(paste("Citric Acid (g / dm"^"3", ")"))
)
ggplot(aes(x=volatile.acidity, y=total.sulfur.dioxide), data=wine_data) +
geom_jitter(aes(color=density)) +
facet_grid(~ quality) +
labs(
title = "Volatile Acidity + Total Sulfur Dioxide + Density by Quality",
x = expression(paste("Volatile Acidity (g / dm"^"3", ")")),
y = expression(paste("Total Sulfur Dioxide (mg / dm"^"3", ")")),
color = expression(paste("Density (g / cm"^"3", ")"))
)
set.seed(101)
# change the quality attribute to a factor (used for prediction)
wine_data$quality <- factor(wine_data$quality)
# partition the data into a 70/30 split
testIndex = createDataPartition(wine_data$quality, p = 0.30, list = FALSE)
training <- wine_data[-testIndex, ]
test <- wine_data[testIndex, ]
model_rf<-randomForest(quality ~ ., data=training)
preds<-predict(model_rf, test[,-101])
model_rf <- train(quality ~ ., data = training, method = "rf", importance = T, trControl = trainControl(method = "cv", number = 3))
test_model <- predict(model_rf, newdata = test)
cfMatrix <- confusionMatrix(data = test_model, test$quality)
print(model_rf, digits = 4)
# Print out the confusion matrix to understand whether the model is predicting well for all classes or just a few
print(cfMatrix, digits = 4)
# Plot the importance of each feature in the model
plot(varImp(model_rf))
hist(wine_data$quantity)
wine_data <- read.csv("wineQualityReds.csv")
summary(wine_data)
hist(wine_data$quantity)
hist(wine_data$quantity)
hist(wine_data)
wine_data <- read.csv("wineQualityReds.csv")
summary(wine_data)
wine_data <- read.csv("wineQualityReds.csv")
summary(wine_data)
names(wine_data)
hist(wine_data)
hist(wine_data$quality)
